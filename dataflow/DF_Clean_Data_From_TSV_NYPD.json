{
	"name": "DF_Clean_Data_From_TSV_NYPD",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText_DataSetNYPD",
						"type": "DatasetReference"
					},
					"name": "readTSVofNYPD"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SnowflakeTable2",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ARREST_KEY as integer,",
				"          ARREST_DATE as string,",
				"          PD_CD as short,",
				"          PD_DESC as string,",
				"          KY_CD as short,",
				"          OFNS_DESC as string,",
				"          LAW_CODE as string,",
				"          LAW_CAT_CD as string,",
				"          ARREST_BORO as string,",
				"          ARREST_PRECINCT as short,",
				"          JURISDICTION_CODE as short,",
				"          AGE_GROUP as string,",
				"          PERP_SEX as string,",
				"          PERP_RACE as string,",
				"          X_COORD_CD as integer,",
				"          Y_COORD_CD as integer,",
				"          Latitude as double,",
				"          Longitude as double,",
				"          {New Georeferenced Column} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     ignoreNoFilesFound: false) ~> readTSVofNYPD",
				"readTSVofNYPD derive(ARR_DATE = toDate(ARREST_DATE, 'MMMM dd yyyy'),",
				"          LAW_CAT_CD1 = iifNull(LAW_CAT_CD, 'Unknown'),",
				"          PD_CD1 = iif(isNull(PD_CD), toInteger(-1), toInteger(PD_CD)),",
				"          KY_CD1 = iif(isNull(KY_CD), toInteger(-1), toInteger(KY_CD)),",
				"          Latitude1 = iif(isNull(Latitude), toDouble(0), toDouble(Latitude)),",
				"          AGE = replace(trim(AGE_GROUP), ' ', ''),",
				"          ARR_BORO = iif(isNull(ARREST_BORO), 'UNKNOWN', ARREST_BORO),",
				"          JOB_EXEC_ID = uuid(),",
				"          JOB_LOAD_DATE = currentDate()) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          ARREST_KEY,",
				"          ARREST_DATE,",
				"          PD_DESC,",
				"          OFNS_DESC,",
				"          LAW_CODE,",
				"          ARREST_PRECINCT,",
				"          JURISDICTION_CODE,",
				"          AGE_GROUP,",
				"          PERP_SEX,",
				"          PERP_RACE,",
				"          X_COORD_CD,",
				"          Y_COORD_CD,",
				"          Longitude,",
				"          {New Georeferenced Column},",
				"          LAW_CAT_CD1,",
				"          PD_CD1,",
				"          KY_CD1,",
				"          Latitude1,",
				"          AGE,",
				"          ARR_BORO,",
				"          JOB_EXEC_ID,",
				"          JOB_LOAD_DATE",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ARREST_KEY as string,",
				"          ARREST_DATE as string,",
				"          PD_CD as string,",
				"          PD_DESC as string,",
				"          KY_CD as string,",
				"          OFNS_DESC as string,",
				"          LAW_CODE as string,",
				"          LAW_CAT_CD as string,",
				"          ARREST_BORO as string,",
				"          ARREST_PRECINCT as string,",
				"          JURISDICTION_CODE as string,",
				"          AGE_GROUP as string,",
				"          PERP_SEX as string,",
				"          PERP_RACE as string,",
				"          X_COORD_CD as string,",
				"          Y_COORD_CD as string,",
				"          LATITUDE as string,",
				"          LONGITUDE as string,",
				"          GEOCODED_COLUMN as string,",
				"          DI_JOB_ID as string,",
				"          DI_LOAD_DT as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     truncate:true,",
				"     format: 'table',",
				"     stageInsert: true,",
				"     mapColumn(",
				"          ARREST_KEY,",
				"          ARREST_DATE,",
				"          PD_CD = PD_CD1,",
				"          PD_DESC,",
				"          KY_CD = KY_CD1,",
				"          OFNS_DESC,",
				"          LAW_CODE,",
				"          LAW_CAT_CD = LAW_CAT_CD1,",
				"          ARREST_BORO = ARR_BORO,",
				"          ARREST_PRECINCT,",
				"          JURISDICTION_CODE,",
				"          AGE_GROUP,",
				"          PERP_SEX,",
				"          PERP_RACE,",
				"          X_COORD_CD,",
				"          Y_COORD_CD,",
				"          LATITUDE = Latitude1,",
				"          LONGITUDE = Longitude,",
				"          GEOCODED_COLUMN = {New Georeferenced Column},",
				"          DI_JOB_ID = JOB_EXEC_ID,",
				"          DI_LOAD_DT = JOB_LOAD_DATE",
				"     )) ~> sink1"
			]
		}
	}
}